import asyncio
import random

# كلاس النجمة
class Star:
    def __init__(self, color):
        self.color = color
        self.index = None
        self.duration = random.uniform(2.5, 4.5)  # كل نجمة إلها مدة لمعان مختلفة
        self.brightness = 0
        self.fading_in = True
        self.active = True

    async def sparkle_forever(self):
        step_time = 0.05
        steps = int(self.duration / step_time / 2)

        # تأخير عشوائي قبل بداية كل نجمة عشان يضهروا تدريجيًا
        await asyncio.sleep(random.uniform(0.2, 4.0))

        while self.active:
            # كل دورة بمكان عشوائي
            self.index = random.randint(0, NUM_LEDS - 1)

            # Fade in
            for i in range(steps):
                if not self.active:
                    break
                self.brightness = int(255 * (i / steps))
                neo.set_led_color(
                    self.index,
                    (self.color[0] * self.brightness) // 255,
                    (self.color[1] * self.brightness) // 255,
                    (self.color[2] * self.brightness) // 255
                )
                await asyncio.sleep(step_time)

            await asyncio.sleep(random.uniform(0.1, 0.3))  # لمعة سريعة

            # Fade out
            for i in range(steps):
                if not self.active:
                    break
                self.brightness = int(255 * ((steps - i) / steps))
                neo.set_led_color(
                    self.index,
                    (self.color[0] * self.brightness) // 255,
                    (self.color[1] * self.brightness) // 255,
                    (self.color[2] * self.brightness) // 255
                )
                await asyncio.sleep(step_time)

            # إطفاء
            neo.set_led_color(self.index, 0, 0, 0)

            # استراحة قبل الدورة الجديدة
            await asyncio.sleep(random.uniform(0.2, 0.5))

# حلقة الأنميشن الرئيسية
async def custom_sparkling_stars_loop(hex_color: str):
    global stop_requested
    neo.clear_strip()
    neo.update_strip()

    r = int(hex_color[1:3], 16)
    g = int(hex_color[3:5], 16)
    b = int(hex_color[5:7], 16)

    stars = [Star((r, g, b)) for _ in range(80)]
    tasks = [asyncio.create_task(star.sparkle_forever()) for star in stars]

    while not stop_requested:
        neo.update_strip()
        await asyncio.sleep(0.05)

    # لما يتوقف كل شي
    for star in stars:
        star.active = False
    await asyncio.gather(*tasks)
    neo.clear_strip()
    neo.update_strip()
