class Snake:
    def __init__(self, start_pos=0, length=10):
        self.position = start_pos
        self.length = length
        self.done = False

    def get_tail(self):
        return self.position - self.length

    def get_body_indexes(self):
        # من الرأس للذيل (طول 10)
        return [
            idx for idx in range(self.position, self.position - self.length, -1)
            if 0 <= idx < NUM_LEDS
        ]

    def move(self):
        self.position += 1
        if self.get_tail() >= NUM_LEDS:
            self.done = True


async def custom_color_wipe_loop(hex_color: str, delay: float = 0.05):
    """
    Final Snake Animation - Super Ghost Mode 🗿
    - Background at half brightness
    - Infinite snakes (length 10) move start→end
    - Full brightness snakes
    - Tail restores background
    - Random gap between snakes (3–10)
    """
    global stop_requested

    # استخراج القيم من الهكس
    r = int(hex_color[1:3], 16)
    g = int(hex_color[3:5], 16)
    b = int(hex_color[5:7], 16)

    # إعداد لون الخلفية (نصف السطوع)
    DIM_LEVEL = 100
    background_color = (
        (r * DIM_LEVEL) // 255,
        (g * DIM_LEVEL) // 255,
        (b * DIM_LEVEL) // 255
    )

    # إضاءة الخلفية أول مرة
    for i in range(NUM_LEDS):
        neo.set_led_color(i, *background_color)
    neo.update_strip()

    snakes = []
    gap_counter = 0
    current_gap = random.randint(3, 10)

    while not stop_requested:
        # إذا تجاوزنا الفجوة، نطلق ثعبان جديد
        if gap_counter <= 0:
            snakes.append(Snake(start_pos=0))
            current_gap = random.randint(3, 10)
            gap_counter = current_gap
        else:
            gap_counter -= 1

        # حدث كل ثعبان
        for s in snakes:
            # أرجع خلفية الذيل
            tail = s.get_tail()
            if 0 <= tail < NUM_LEDS:
                neo.set_led_color(tail, *background_color)

            # أضئ جسم الثعبان
            for idx in s.get_body_indexes():
                neo.set_led_color(idx, r, g, b)

            s.move()

        # صفّي الثعابين المنتهية
        snakes = [s for s in snakes if not s.done]

        neo.update_strip()
        await asyncio.sleep(delay)

    # عند الإيقاف، ننظف الشريط
    neo.clear_strip()
    neo.update_strip()
