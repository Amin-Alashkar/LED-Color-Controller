async def pulse_sync_loop(delay: float = .6000 // 2, steps: int = 20):
    """
    تأثير Larson Scanner (ضوء يتنقل ذهابًا وإيابًا مع ذيل لوني):
    - يتحرك رأس الضوء ذهابًا وإيابًا
    - خلف كل رأس ضوئي ذيل يتلاشى تدريجيًا
    - يتغير اللون بعد كل دورة كاملة
    """
    global stop_requested
    COLORS = [
        (255, 0, 0),    # أحمر
        (0, 255, 0),    # أخضر
        (0, 0, 255),    # أزرق
        (255, 255, 0),  # أصفر
        (255, 0, 255),  # أرجواني
        (0, 255, 255),  # سماوي
        (255, 165, 0),  # برتقالي
        (255, 192, 203),# وردي
        (138, 43, 226), # أزرق بنفسجي
        (50, 205, 50)   # أخضر ليموني
    ]
    position = 0
    direction = 1
    trail_length = 20
    color_index = 0

    while not stop_requested:
        r_base, g_base, b_base = COLORS[color_index % len(COLORS)]
        neo.clear_strip()
        for t in range(trail_length):
            pos = position - (t * direction)
            if 0 <= pos < NUM_LEDS:
                factor = (trail_length - t) / trail_length
                r = int(r_base * factor)
                g = int(g_base * factor)
                b = int(b_base * factor)
                neo.set_led_color(
                        pos,
                        int(r* BRIGHTNESS_SCALE),
                        int(g* BRIGHTNESS_SCALE),
                        int(b* BRIGHTNESS_SCALE)
                    )
        neo.update_strip()
        await asyncio.sleep(delay)
        position += direction
        if position >= NUM_LEDS - 1 or position <= 0:
            direction *= -1
            color_index += 1
    neo.clear_strip()
    neo.update_strip()
