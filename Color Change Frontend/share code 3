const API_BASE_URL = `http://${window.location.hostname}:8000`;

// helper: يضيف input[type=color] مؤقتاً للزر ويديره
function pickColorFromButton(button, callback) {
    const input = document.createElement('input');
    input.type = 'color';
    input.value = '#ffffff';
    // نجعل الـ input شفافاً ويغطي الزر ليفتح المكان ذاته
    input.style.position = 'absolute';
    input.style.left = '0';
    input.style.top = '0';
    input.style.width = '100%';
    input.style.height = '100%';
    input.style.opacity = '0';
    input.style.cursor = 'pointer';
    button.style.position = 'relative';
    button.appendChild(input);
    input.click();
    input.addEventListener('input', (e) => {
        callback(e.target.value);
        button.removeChild(input);
    }, { once: true });
}

// DOM Elements
const colorDisplay         = document.getElementById('colorDisplay');
const lightOneBtn          = document.getElementById('lightOneBtn');
const offBtn               = document.getElementById('offBtn');
const off2Btn              = document.getElementById('off2Btn');
const colorPicker          = document.getElementById('colorPicker');

// ... (بقية تعريف الأزرار بدون تغيير) ...
const customHeartBeatBtn        = document.getElementById('customHeartBeatBtn');
// ... والبقية ...

let isAnimationRunning = false;
let currentAnim = null;

// نداء عام لإرسال طلبات POST
async function sendRequest(endpoint, data) {
    try {
        const res = await fetch(`${API_BASE_URL}${endpoint}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data)
        });
        return await res.json();
    } catch (e) {
        console.error("API Error:", e);
        return { status: "error", message: e.message };
    }
}

// … دوال fetchAndApplyState() و stopAnimation() و updateUI() بدون تغيير …

// ─── NEW: دوال Create Your Own معدّلة لاستخدام pickColorFromButton ───

// مثال على Heart Beat:
async function startCustomHeartBeat() {
    if (isAnimationRunning && currentAnim === "custom_heart_beat") {
        await stopAnimation();
        return;
    }
    if (isAnimationRunning && currentAnim !== "custom_heart_beat") {
        await stopAnimation();
    }
    // افتح color picker مباشرة على الزر
    pickColorFromButton(customHeartBeatBtn, async (chosenColor) => {
        isAnimationRunning = true;
        currentAnim = "custom_heart_beat";
        customHeartBeatBtn.classList.add('active');
        customHeartBeatBtn.textContent = 'Heart Beat (Custom) (Running)';
        cardElement.style.background = "#000000";
        colorDisplay.textContent = "Heart Beat - Custom";
        await sendRequest("/animate", {
            animation_type: "custom_heart_beat",
            hex_color: chosenColor
        });
    });
}

// نفس الشيء لكل دالة Create Your Own الأخرى:
async function startCustomFadeAnimation() {
    if (isAnimationRunning && currentAnim === "custom_fade") {
        await stopAnimation();
        return;
    }
    if (isAnimationRunning && currentAnim !== "custom_fade") {
        await stopAnimation();
    }
    pickColorFromButton(customFadeBtn, async (chosenColor) => {
        isAnimationRunning = true;
        currentAnim = "custom_fade";
        customFadeBtn.classList.add('active');
        customFadeBtn.textContent = 'Fade Colors - Custom (Running)';
        cardElement.style.background = "#000000";
        colorDisplay.textContent = "Fade Colors - Custom";
        await sendRequest("/animate", {
            animation_type: "custom_fade",
            hex_color: chosenColor
        });
    });
}

async function startCustomBlinkAnimation() {
    if (isAnimationRunning && currentAnim === "custom_blink") {
        await stopAnimation();
        return;
    }
    if (isAnimationRunning && currentAnim !== "custom_blink") {
        await stopAnimation();
    }
    pickColorFromButton(customBlinkBtn, async (chosenColor) => {
        isAnimationRunning = true;
        currentAnim = "custom_blink";
        customBlinkBtn.classList.add('active');
        customBlinkBtn.textContent = 'Blinking - Custom (Running)';
        cardElement.style.background = "#000000";
        colorDisplay.textContent = "Blinking - Custom";
        await sendRequest("/animate", {
            animation_type: "custom_blink",
            hex_color: chosenColor
        });
    });
}

// ... وكرر نفس النمط لجميع دوال startCustom… الأخرى ...

// ─── ربط الأحداث ───
customHeartBeatBtn   .addEventListener("click", startCustomHeartBeat);
customFadeBtn        .addEventListener("click", startCustomFadeAnimation);
customBlinkBtn       .addEventListener("click", startCustomBlinkAnimation);
// ... وبقية أزرار Create Your Own ...

// احتفظ ببقية روابط الأزرار الأصلية بدون تغيير
lightOneBtn          .addEventListener("click", startFadeAnimation);
pulseSyncBtn         .addEventListener("click", startPulseSyncAnimation);
// ...

// لاحظ: تمت إزالة إضافة listener عامة على colorPicker في أسفل الملف
// بحيث لا يُستخدم المربع العام إطلاقاً لاختيار ألوان أنيميشنات “Create Your Own”.
