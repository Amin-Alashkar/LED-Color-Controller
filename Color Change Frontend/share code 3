async def single_snake_loop(delay_per_step: float = 0.0001):
    """
    انيميشن الأفعى الوحيدة (Snake One):
    - تنتظر وقتاً عشوائياً بين 0 و 30 ثانية قبل الانطلاق
    - تتحرك الأفعى من الـ LED رقم 19 إلى LED رقم -trail_length
    - سرعتها مضاعفة (لذلك استخدمنا delay_per_step = 0.0001)
    - بعد الانتهاء تنتظر مجدداً وقتاً عشوائياً جديداً في الدورة التالية
    """
    global stop_requested
    trail_length = 12
    while not stop_requested:
        wait_time = random.uniform(0, 30)
        await asyncio.sleep(wait_time)
        
        color = (
            random.randint(100, 255),
            random.randint(100, 255),
            random.randint(100, 255)
        )
        
        for head_pos in range(NUM_LEDS - 1, -trail_length - 1, -1):
            if stop_requested:
                break
            
            neo.clear_strip()
            for t in range(trail_length):
                led_pos = head_pos + t
                if 0 <= led_pos < NUM_LEDS:
                    factor = (trail_length - t) / trail_length
                    r = int(color[0] * factor)
                    g = int(color[1] * factor)
                    b = int(color[2] * factor)
                    neo.set_led_color(
                        led_pos,
                        int(r* BRIGHTNESS_SCALE),
                        int(g* BRIGHTNESS_SCALE),
                        int(b* BRIGHTNESS_SCALE)
                    )
            
            neo.update_strip()
            await asyncio.sleep(delay_per_step)

    neo.clear_strip()
    neo.update_strip()
