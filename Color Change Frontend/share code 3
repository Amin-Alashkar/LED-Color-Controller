async def custom_bounce_back_loop(hex_color: str, delay: float = 0.05):
    """
    Custom Bounce Back:
    - Similar to Knight Rider but pauses briefly at each end.
    """
    global stop_requested
    r_base = int(hex_color[1:3], 16)
    g_base = int(hex_color[3:5], 16)
    b_base = int(hex_color[5:7], 16)

    position = 0
    direction = 1

    while not stop_requested:
        neo.clear_strip()
        neo.set_led_color(position, r_base, g_base, b_base)
        neo.update_strip()
        await asyncio.sleep(delay)
        if position == 0 or position == NUM_LEDS - 1:
            await asyncio.sleep(0.2)
        position += direction
        if position > NUM_LEDS - 1:
            position = NUM_LEDS - 1
            direction = -1
        if position < 0:
            position = 0
            direction = 1

    neo.clear_strip()
    neo.update_strip()
