async def custom_bounce_back_loop(hex_color: str, delay: float = 0.03):
    """
    Custom Bounce Back (Neon Snake Edition):
    - Multiple separated segments bounce back and forth.
    """
    global stop_requested
    r = int(hex_color[1:3], 16)
    g = int(hex_color[3:5], 16)
    b = int(hex_color[5:7], 16)

    segment_count = 4
    segment_size = 4
    gap_size = 6

    direction = 1
    head_position = 0  # position of the first segment

    max_position = NUM_LEDS - (segment_count * (segment_size + gap_size)) + gap_size

    while not stop_requested:
        neo.clear_strip()

        for i in range(segment_count):
            start = head_position + i * (segment_size + gap_size)
            for j in range(segment_size):
                idx = start + j
                if 0 <= idx < NUM_LEDS:
                    neo.set_led_color(idx, r, g, b)

        neo.update_strip()
        await asyncio.sleep(delay)

        head_position += direction
        if head_position <= 0 or head_position >= max_position:
            direction *= -1
            await asyncio.sleep(0.15)  # pause when bouncing

    neo.clear_strip()
    neo.update_strip()
