import math
import time

async def custom_time_warp_loop(hex_color: str, base_delay: float = 0.05):
    """
    Time Warp Enhanced:
    - موجة لونية تمر بالشريط بسرعات تتسارع وتتبطأ بشكل سلس.
    """
    global stop_requested
    r_base = int(hex_color[1:3], 16)
    g_base = int(hex_color[3:5], 16)
    b_base = int(hex_color[5:7], 16)

    max_speed = 0.01
    min_speed = 0.12
    wave_size = 10  # حجم الموجة المضيئة
    t = 0  # زمن وهمي

    while not stop_requested:
        neo.clear_strip()

        # حساب السرعة باستخدام دالة ساين (يعطي تسارع وتباطؤ بشكل طبيعي)
        # القيمة الناتجة تكون بين 0 و 1، نحولها إلى delay بين max و min
        speed_factor = (math.sin(t) + 1) / 2  # بين 0 و 1
        current_delay = max_speed + (1 - speed_factor) * (min_speed - max_speed)

        # حساب مركز الموجة
        center = int((math.sin(t * 0.7) + 1) / 2 * (NUM_LEDS - 1))  # يتحرك يمين ويسار

        for i in range(NUM_LEDS):
            distance = abs(i - center)
            if distance <= wave_size:
                fade = 1 - (distance / wave_size)
                r = int(r_base * fade)
                g = int(g_base * fade)
                b = int(b_base * fade)
                neo.set_led_color(i, r, g, b)

        neo.update_strip()
        await asyncio.sleep(current_delay)
        t += 0.15  # كل تكرار يزيد الزمن

    neo.clear_strip()
    neo.update_strip()
