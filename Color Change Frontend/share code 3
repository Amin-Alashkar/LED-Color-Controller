class Star:
    def __init__(self, color):
        self.color = color
        self.index = None
        self.duration = random.uniform(2.5, 4.5)
        self.brightness = 0
        self.active = True

    async def sparkle_forever(self):
        step_time = 0.05
        steps = int(self.duration / step_time / 2)

        # ⭐ تأخير عشوائي قبل أول لمعان
        await asyncio.sleep(random.uniform(0.1, 5))

        while self.active:
            # اختر موقع عشوائي جديد
            self.index = random.randint(0, NUM_LEDS - 1)

            # Fade in
            for i in range(steps):
                if not self.active:
                    return
                self.brightness = int(255 * (i / steps))
                neo.set_led_color(
                    self.index,
                    (self.color[0] * self.brightness) // 255,
                    (self.color[1] * self.brightness) // 255,
                    (self.color[2] * self.brightness) // 255
                )
                await asyncio.sleep(step_time)

            await asyncio.sleep(random.uniform(0.1, 0.3))

            # Fade out
            for i in range(steps):
                if not self.active:
                    return
                self.brightness = int(255 * ((steps - i) / steps))
                neo.set_led_color(
                    self.index,
                    (self.color[0] * self.brightness) // 255,
                    (self.color[1] * self.brightness) // 255,
                    (self.color[2] * self.brightness) // 255
                )
                await asyncio.sleep(step_time)

            # طفي النجمة
            neo.set_led_color(self.index, 0, 0, 0)

            # استراحة قبل المرة الجاية
            await asyncio.sleep(random.uniform(0.2, 0.5))
