class Snake:
    def __init__(self, start_pos=0, length=10):
        self.position = start_pos
        self.length = length
        self.done = False

    def get_tail(self):
        return self.position - self.length

    def get_body_indexes(self):
        return [
            idx for idx in range(self.position, self.position - self.length, -1)
            if 0 <= idx < NUM_LEDS
        ]

    def move(self):
        self.position += 1
        if self.get_tail() >= NUM_LEDS:
            self.done = True


async def custom_color_wipe_loop(hex_color: str, delay: float = 0.05):
    global stop_requested

    # استخراج قيم اللون من HEX
    r = int(hex_color[1:3], 16)
    g = int(hex_color[3:5], 16)
    b = int(hex_color[5:7], 16)

    # إعداد لون الخلفية (نصف السطوع)
    DIM_LEVEL = 100  # 100/255 ≈ 39% سطوع
    background_color = (
        (r * DIM_LEVEL) // 255,
        (g * DIM_LEVEL) // 255,
        (b * DIM_LEVEL) // 255
    )

    # إضاءة الخلفية الأولية
    for i in range(NUM_LEDS):
        neo.set_led_color(i, *background_color)
    neo.update_strip()

    snakes = []
    gap_counter = 0
    next_gap = 0  # سيتم تعيينه عند إضافة أول ثعبان

    while not stop_requested:
        # إضافة ثعبان جديد عند انتهاء الفجوة
        if gap_counter <= 0:
            snakes.append(Snake(start_pos=0))
            gap_in_space = random.randint(3, 10)  # الفجوة المرئية بين الثعابين
            next_gap = 10 + gap_in_space  # الانتظار حتى يترك الثعبان السابق مسافة كافية
            gap_counter = next_gap
        else:
            gap_counter -= 1

        # معالجة كل ثعبان
        for s in snakes:
            # إعادة لون الخلفية لموضع الذيل
            tail_idx = s.get_tail()
            if 0 <= tail_idx < NUM_LEDS:
                neo.set_led_color(tail_idx, *background_color)
            
            # إضاءة جسم الثعبان بالسطوع الكامل
            for idx in s.get_body_indexes():
                neo.set_led_color(idx, r, g, b)
            
            # تحريك الثعبان
            s.move()

        # إزالة الثعابين المنتهية
        snakes = [s for s in snakes if not s.done]

        neo.update_strip()
        await asyncio.sleep(delay)

    # تنظيف الشريط عند الطلب
    neo.clear_strip()
    neo.update_strip()
