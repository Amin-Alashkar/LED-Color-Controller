async def custom_pulse_sync_loop(hex_color: str, delay: float = None, steps: int = 20):
    """
    Custom Pulse Sync – all LEDs pulse in the chosen color.
    Matches the speed and steps of pulse_sync_loop.
    """
    global stop_requested
    r_base = int(hex_color[1:3], 16)
    g_base = int(hex_color[3:5], 16)
    b_base = int(hex_color[5:7], 16)

    if delay is None:
        delay = 0.03  # زي النسخة الأصلية

    while not stop_requested:
        # تأخير عشوائي بين كل نبضة
        wait_time = random.uniform(0, 10)
        await asyncio.sleep(wait_time)

        # التصاعد (إضاءة تدريجية)
        for step in range(steps):
            if stop_requested:
                break
            factor = step / (steps - 1)
            r = int(r_base * factor)
            g = int(g_base * factor)
            b = int(b_base * factor)
            for i in range(NUM_LEDS):
                neo.set_led_color(
                    i,
                    int(r * BRIGHTNESS_SCALE),
                    int(g * BRIGHTNESS_SCALE),
                    int(b * BRIGHTNESS_SCALE)
                )
            neo.update_strip()
            await asyncio.sleep(delay)

        # التناقص (الانطفاء تدريجي)
        for step in range(steps):
            if stop_requested:
                break
            factor = 1 - (step / (steps - 1))
            r = int(r_base * factor)
            g = int(g_base * factor)
            b = int(b_base * factor)
            for i in range(NUM_LEDS):
                neo.set_led_color(
                    i,
                    int(r * BRIGHTNESS_SCALE),
                    int(g * BRIGHTNESS_SCALE),
                    int(b * BRIGHTNESS_SCALE)
                )
            neo.update_strip()
            await asyncio.sleep(delay)

    neo.clear_strip()
    neo.update_strip()
