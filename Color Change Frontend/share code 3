async def custom_color_wipe_loop(hex_color: str, delay: float = 0.05):
    """
    Snake Army V2:
    - Background stays on (dimmed)
    - Snakes move forward and leave background behind
    - Snakes have random gap between them
    """
    global stop_requested

    r_base = int(hex_color[1:3], 16)
    g_base = int(hex_color[3:5], 16)
    b_base = int(hex_color[5:7], 16)

    DIM_LEVEL = 100  # نصف السطوع
    BRIGHT_LEVEL = 255  # سطوع الأفعى

    background_color = (
        (r_base * DIM_LEVEL) // 255,
        (g_base * DIM_LEVEL) // 255,
        (b_base * DIM_LEVEL) // 255
    )

    # اضاءة الخلفية أول مرة
    for i in range(NUM_LEDS):
        neo.set_led_color(i, *background_color)
    neo.update_strip()

    snakes = []
    snake_gap_counter = 0
    current_gap = random.randint(1, 10)

    while not stop_requested:
        # أضف أفعى جديدة إذا وصلنا للمسافة المطلوبة
        if snake_gap_counter >= current_gap:
            snakes.append(Snake(start_pos=0))
            snake_gap_counter = 0
            current_gap = random.randint(1, 10)
        else:
            snake_gap_counter += 1

        # تحديث الأفاعي
        for snake in snakes:
            # أرجع الذيل للسطر العادي
            tail = snake.get_tail()
            if 0 <= tail < NUM_LEDS:
                neo.set_led_color(tail, *background_color)

            # اضئ جسم الأفعى
            for i in snake.get_body_indexes():
                neo.set_led_color(i, r_base, g_base, b_base)

            snake.move()

        # إزالة الأفاعي اللي خلصت
        snakes = [s for s in snakes if not s.done]

        neo.update_strip()
        await asyncio.sleep(delay)

    neo.clear_strip()
    neo.update_strip()
